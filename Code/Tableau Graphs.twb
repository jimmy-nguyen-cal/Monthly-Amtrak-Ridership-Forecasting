<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.1112.0729                               -->
<workbook original-version='18.1' source-build='2021.1.8 (20211.21.1112.0729)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Amtrak Ridership Data' inline='true' name='federated.1xuiy2m0wrrsbu1ervkx91ms8gwf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Amtrak Ridership Data' name='textscan.0q87zln0uowafl197o1ht0clgz1i'>
            <connection class='textscan' directory='C:/Coding/Monthly-Amtrak-Ridership-Forecasting/Data' filename='Amtrak Ridership Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0q87zln0uowafl197o1ht0clgz1i' name='Amtrak Ridership Data.csv' table='[Amtrak Ridership Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='MMM-yy' name='Month' ordinal='0' />
            <column datatype='integer' name='Number of Passengers' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0q87zln0uowafl197o1ht0clgz1i' name='Amtrak Ridership Data.csv' table='[Amtrak Ridership Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='MMM-yy' name='Month' ordinal='0' />
            <column datatype='integer' name='Number of Passengers' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Amtrak Ridership Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Amtrak Ridership Data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Passengers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Passengers]</local-name>
            <parent-name>[Amtrak Ridership Data.csv]</parent-name>
            <remote-alias>Number of Passengers</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Amtrak Ridership Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Amtrak Ridership Data.csv_FE95EEAEAA724276890A05924C9814D7]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Amtrak Ridership Data.csv' id='Amtrak Ridership Data.csv_FE95EEAEAA724276890A05924C9814D7'>
            <properties context=''>
              <relation connection='textscan.0q87zln0uowafl197o1ht0clgz1i' name='Amtrak Ridership Data.csv' table='[Amtrak Ridership Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' date-parse-format='MMM-yy' name='Month' ordinal='0' />
                  <column datatype='integer' name='Number of Passengers' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Original Data&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amtrak Ridership Data' name='federated.1xuiy2m0wrrsbu1ervkx91ms8gwf' />
          </datasources>
          <datasource-dependencies datasource='federated.1xuiy2m0wrrsbu1ervkx91ms8gwf'>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Passengers]' role='measure' type='quantitative' />
            <column-instance column='[Number of Passengers]' derivation='Sum' forecast-column-base='[sum:Number of Passengers:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Number of Passengers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='MDY' name='[md:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Passengers]' derivation='Sum' name='[sum:Number of Passengers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Month-Trunc' name='[tmn:Month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[md:Month:ok]'>
            <groupfilter from='19910101' function='range' level='[md:Month:ok]' to='20130501' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[md:Month:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[tmn:Month:qk]' scope='cols' value='Monthly Ridership from 1991 to 2013' />
            <encoding attr='space' class='0' field='[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[tmn:Month:qk]' field-type='quantitative' max='#2014-12-31 00:00:00#' min='#1990-01-01 00:00:00#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[fVal:sum:Number of Passengers:qk]</rows>
        <cols>[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[tmn:Month:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{B3DE52DA-04B6-45E3-9927-BCC935D91B94}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[md:Month:ok]</field>
            <field>[federated.1xuiy2m0wrrsbu1ervkx91ms8gwf].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{164924CA-8F00-4867-BC02-CE111C2B486A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      0AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
