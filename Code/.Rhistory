# plot
plot(train.ts, ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts)
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'grey41')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'grey11')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(140000, 3000000), ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(140000, 2800000), ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1400000, 2800000), ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1300000, 2800000), ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1300000, 2800000), ylab = "Ridership", xlab = "Time",
xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1300000, 2800000), ylab = "Ridership", xlab = "Time",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1300000, 2800000), ylab = "Ridership",
xlab = "Time", bty="l",
ty = "l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1300000, 2800000), ylab = "Ridership",
xlab = "Time", bty="l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
# Make a quick time-series plot
ts.plot(df, xlab = "Year", ylab = "Number of Passengers",
main = "Amtrak Ridership, 1991-2013", col = 4)
# Make a quick time-series plot
ts.plot(df, xlab = "Year", ylab = "Number of Passengers", bty = "l",
main = "Amtrak Ridership, 1991-2013", col = 4)
# Make a quick time-series plot
ts.plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l",
main = "Amtrak Ridership, 1991-2013", col = 4)
# Make a quick time-series plot
plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l",
main = "Amtrak Ridership, 1991-2013", col = 4)
# Make a quick time-series plot
plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l", col = "grey41",
main = "Amtrak Ridership, 1991-2013", col = 4)
# Make a quick time-series plot
plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l", col = "grey41",
main = "Amtrak Ridership, 1991-2013", col = 4)
# Make a quick time-series plot
plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l", col = "grey41",
main = "Amtrak Ridership, 1991-2013")
# Make a quick time-series plot
plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l", col = "grey41",
main = "Amtrak Ridership, 1991-2013")
library(astsa)
library(readr)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(tidyverse)
library(lubridate)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Load the data set from CSV file
df <- read_csv("~/Coding/Monthly-Amtrak-Ridership-Forecasting/Data/Amtrak Ridership Data.csv")
# Rename columns
names(df)[1] <- 'Dates'
names(df[2]) <- 'Number_of_Passengers'
# First 12 months in 1991
head(df, n = 12) %>%
pander(style = "grid", caption = "First 12 Months - 1991")
# convert to time series object
df<- ts(data = df[,2], start = c(1991,1),
end = c(2013,5), frequency = 12)
print("Starting Year and Month: ")
start(df)
print("Final Year and Month: ")
end(df)
# Make a quick time-series plot
plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l", col = "grey41",
main = "Amtrak Ridership, 1991-2013")
par(mfrow=c(4,1))
# Original
ts.plot(df, xlab = "Year", ylab = "Number of Passengers",
main = "Original Amtrak Ridership, 1991-2013", col = 5)
# log
ts.plot(log(df), xlab = "Year", ylab = "Log",
main = "Log Amtrak Ridership, 1991-2013", col = 3)
# difference
ts.plot(diff(df), xlab = "Year", ylab = "Difference",
main = "Difference Amtrak Ridership, 1991-2013", col = 6)
# seasonal differencing
ts.plot(diff(df, s = 4), xlab = "Year", ylab = "Seasonal difference",
main = "Seasonal Difference Amtrak Ridership, 1991-2013", col = 'grey41')
# Trailing Average
ma.trailing <- rollmean(df, k = 12, align = "right")
# Centered-Average
ma.centered <- ma(df, order = 12)
# Original Data
plot(df, ylab = "Ridership", xlab = "Time",
bty = "l", xaxt = "n", col = 'grey41',
main = "Cenetered vs. Trailing Moving Average")
# Labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# Centered average lines
lines(ma.centered, lwd = 2, col = 'red')
# trailing moving average
lines(ma.trailing, lwd = 2, lty = 2, col ='blue')
# legend
legend(1991,2800000, c("Ridership","Centered Moving Average",
"Trailing Moving Average"), lty=c(1,1,2),
lwd=c(1,2,2), bty = "n", col = c("grey41", 'red', 'blue'))
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1300000, 2800000), ylab = "Ridership",
xlab = "Time", bty="l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
library(astsa)
library(readr)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(tidyverse)
library(lubridate)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Load the data set from CSV file
df <- read_csv("~/Coding/Monthly-Amtrak-Ridership-Forecasting/Data/Amtrak Ridership Data.csv")
# Rename columns
names(df)[1] <- 'Dates'
names(df[2]) <- 'Number_of_Passengers'
# First 12 months in 1991
head(df, n = 12) %>%
pander(style = "grid", caption = "First 12 Months - 1991")
# convert to time series object
df<- ts(data = df[,2], start = c(1991,1),
end = c(2013,5), frequency = 12)
print("Starting Year and Month: ")
start(df)
print("Final Year and Month: ")
end(df)
# Make a quick time-series plot
plot(df, xlab = "Year", ylab = "Number of Passengers",
bty = "l", col = "grey41",
main = "Amtrak Ridership, 1991-2013")
par(mfrow=c(4,1))
# Original
ts.plot(df, xlab = "Year", ylab = "Number of Passengers",
main = "Original Amtrak Ridership, 1991-2013", col = 5)
# log
ts.plot(log(df), xlab = "Year", ylab = "Log",
main = "Log Amtrak Ridership, 1991-2013", col = 3)
# difference
ts.plot(diff(df), xlab = "Year", ylab = "Difference",
main = "Difference Amtrak Ridership, 1991-2013", col = 6)
# seasonal differencing
ts.plot(diff(df, s = 4), xlab = "Year", ylab = "Seasonal difference",
main = "Seasonal Difference Amtrak Ridership, 1991-2013", col = 'grey41')
# Trailing Average
ma.trailing <- rollmean(df, k = 12, align = "right")
# Centered-Average
ma.centered <- ma(df, order = 12)
# Original Data
plot(df, ylab = "Ridership", xlab = "Time",
bty = "l", xaxt = "n", col = 'grey41',
main = "Cenetered vs. Trailing Moving Average")
# Labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# Centered average lines
lines(ma.centered, lwd = 2, col = 'red')
# trailing moving average
lines(ma.trailing, lwd = 2, lty = 2, col ='blue')
# legend
legend(1991,2800000, c("Ridership","Centered Moving Average",
"Trailing Moving Average"), lty=c(1,1,2),
lwd=c(1,2,2), bty = "n", col = c("grey41", 'red', 'blue'))
# Validation Data
nValid <- 36
# Training data
nTrain <- length(df) - nValid
# time window for training data
train.ts <- window(df, start = c(1991, 1), end = c(1991, nTrain))
# time window for validation data
valid.ts <- window(df, start = c(1991, nTrain + 1), end = c(1991, nTrain + nValid))
# trailing moving average
ma.trailing <- rollmean(train.ts, k = 12, align = "right")
# last trailing moving average
last.ma <- tail(ma.trailing, 1)
# prediction by trailing moving average
ma.trailing.pred <- ts(rep(last.ma, nValid), start = c(1991, nTrain + 1),
end = c(1991, nTrain + nValid), freq = 12)
# plot
plot(train.ts, ylim = c(1300000, 2800000), ylab = "Ridership",
xlab = "Time", bty="l", xaxt = "n", col = 'grey41',
xlim = c(1991,2013.50), main = "Forecasting with Trailing Moving Average")
# labels
axis(1, at = seq(1991, 2013.50, 1), labels = format(seq(1991, 2013.50, 1)))
# training data
lines(ma.trailing, lwd = 2, col = "blue")
# validation data
lines(valid.ts, col = 'blue')
# predictions
lines(ma.trailing.pred, lwd = 2, col = "blue", lty = 2)
